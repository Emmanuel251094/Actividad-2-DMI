{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { StyledText, StyledView, StyledNotValid, StyledValid, StyledNormalText, StyledButtonText, StyledButtonStyles, StyledTextP } from \"../styles/StyledComp\";\n\nfunction FirtsScreen() {\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      counter = _useState2[0],\n      setCounter = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      name = _useState4[0],\n      setName = _useState4[1];\n\n  var increaseCounter = function increaseCounter() {\n    if (counter < 1000) {\n      setCounter(function (current) {\n        return current + 1;\n      });\n    }\n  };\n\n  var decreaseCounter = function decreaseCounter() {\n    if (counter > 0) {\n      setCounter(function (current) {\n        return current - 1;\n      });\n    }\n  };\n\n  var autoincrement = function autoincrement() {\n    if (counter < 1000) {\n      for (var i = 0; i < 1000 - counter; i++) {\n        setCounter(function (current) {\n          return current + 1;\n        });\n      }\n    }\n  };\n\n  var reset = function reset() {\n    setCounter(function (current) {\n      return current = 0;\n    });\n  };\n\n  var visibleText = function visibleText() {\n    setName(\"Juan Eduardo Martínez Figueroa\");\n    setTimeout(function () {\n      setName(\"\");\n    }, 5000);\n  };\n\n  return React.createElement(StyledView, null, React.createElement(StyledText, null, \"Counter\"), React.createElement(StyledText, null, counter), React.createElement(TouchableOpacity, {\n    onPress: increaseCounter\n  }, React.createElement(StyledButtonStyles, null, React.createElement(StyledText, null, React.createElement(StyledButtonText, null, \"+\")))), React.createElement(TouchableOpacity, {\n    onPress: decreaseCounter\n  }, React.createElement(StyledButtonStyles, null, React.createElement(StyledText, null, React.createElement(StyledButtonText, null, \"-\")))), React.createElement(TouchableOpacity, {\n    onPress: autoincrement\n  }, React.createElement(StyledButtonStyles, null, React.createElement(StyledText, null, React.createElement(StyledButtonText, null, \"auto\")))), React.createElement(TouchableOpacity, {\n    onPress: reset\n  }, React.createElement(StyledButtonStyles, null, React.createElement(StyledText, null, React.createElement(StyledButtonText, null, \"reset\")))), counter > 10 || counter < 0 ? React.createElement(StyledText, null, React.createElement(StyledNormalText, null, React.createElement(StyledNotValid, null, \"Not in range\"))) : React.createElement(StyledText, null, counter <= 8 ? React.createElement(StyledValid, null, \"Is valid\") : React.createElement(StyledNotValid, null, \"Is not valid\")), React.createElement(TouchableOpacity, {\n    onPress: visibleText\n  }, React.createElement(StyledButtonStyles, null, React.createElement(StyledText, null, React.createElement(StyledButtonText, null, \"Nombre\")))), React.createElement(StyledText, null, React.createElement(StyledTextP, null, name)));\n}\n\nexport default FirtsScreen;","map":{"version":3,"sources":["C:/Users/saipo/Documents/GitHub/expo-tabs-EduardoMtzUta/UnidadII-ActividadII-ExpoTabs/pages/Firts.js"],"names":["React","useState","StyledText","StyledView","StyledNotValid","StyledValid","StyledNormalText","StyledButtonText","StyledButtonStyles","StyledTextP","FirtsScreen","counter","setCounter","name","setName","increaseCounter","current","decreaseCounter","autoincrement","i","reset","visibleText","setTimeout"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport {TouchableOpacity } from \"react-native\";\r\nimport {\r\n  StyledText,\r\n  StyledView,\r\n  StyledNotValid,\r\n  StyledValid,\r\n  StyledNormalText,\r\n  StyledButtonText,\r\n  StyledButtonStyles,\r\n  StyledTextP,\r\n} from \"../styles/StyledComp\";\r\n\r\nfunction FirtsScreen() {\r\n  const [counter, setCounter] = useState(0);\r\n  const [name, setName] = useState(\"\");\r\n\r\n  const increaseCounter = () => {\r\n    if (counter < 1000) {\r\n      setCounter((current) => current + 1);\r\n    }\r\n  };\r\n  const decreaseCounter = () => {\r\n    if (counter > 0) {\r\n      setCounter((current) => current - 1);\r\n    }\r\n  };\r\n\r\n  const autoincrement = () => {\r\n    if (counter < 1000) {\r\n      for (var i = 0; i < 1000 - counter; i++) {\r\n        setCounter((current) => current + 1);\r\n      }\r\n    }\r\n  };\r\n\r\n  const reset = () => {\r\n    setCounter((current) => (current = 0));\r\n  };\r\n\r\n  const visibleText = () => {\r\n    setName(\"Juan Eduardo Martínez Figueroa\");\r\n    setTimeout(() => {\r\n      setName(\"\");\r\n    }, 5000);\r\n  };\r\n\r\n  return (\r\n    <StyledView>\r\n      \r\n      <StyledText>Counter</StyledText>\r\n      <StyledText>{counter}</StyledText>\r\n\r\n      <TouchableOpacity onPress={increaseCounter}>\r\n        <StyledButtonStyles>\r\n          <StyledText>\r\n            <StyledButtonText>+</StyledButtonText>\r\n          </StyledText>\r\n        </StyledButtonStyles>\r\n      </TouchableOpacity>\r\n\r\n      <TouchableOpacity onPress={decreaseCounter}>\r\n        <StyledButtonStyles>\r\n          <StyledText>\r\n            <StyledButtonText>-</StyledButtonText>\r\n          </StyledText>\r\n        </StyledButtonStyles>\r\n      </TouchableOpacity>\r\n\r\n      <TouchableOpacity onPress={autoincrement}>\r\n        <StyledButtonStyles>\r\n          <StyledText>\r\n            <StyledButtonText>auto</StyledButtonText>\r\n          </StyledText>\r\n        </StyledButtonStyles>\r\n      </TouchableOpacity>\r\n\r\n      <TouchableOpacity onPress={reset}>\r\n        <StyledButtonStyles>\r\n          <StyledText>\r\n            <StyledButtonText>reset</StyledButtonText>\r\n          </StyledText>\r\n        </StyledButtonStyles>\r\n      </TouchableOpacity>\r\n\r\n      {counter > 10 || counter < 0 ? (\r\n        <StyledText>\r\n          <StyledNormalText>\r\n            <StyledNotValid>{\"Not in range\"}</StyledNotValid>\r\n          </StyledNormalText>\r\n        </StyledText>\r\n      ) : (\r\n        <StyledText>\r\n          {counter <= 8 ? (\r\n            <StyledValid>Is valid</StyledValid>\r\n          ) : (\r\n            <StyledNotValid>Is not valid</StyledNotValid>\r\n          )}\r\n        </StyledText>\r\n      )}\r\n\r\n      <TouchableOpacity onPress={visibleText}>\r\n        <StyledButtonStyles>\r\n          <StyledText>\r\n            <StyledButtonText>Nombre</StyledButtonText>\r\n          </StyledText>\r\n        </StyledButtonStyles>\r\n      </TouchableOpacity>\r\n\r\n      <StyledText>\r\n        <StyledTextP>{name}</StyledTextP>\r\n      </StyledText>\r\n    </StyledView>\r\n  );\r\n}\r\nexport default FirtsScreen;\r\n"]},"metadata":{},"sourceType":"module"}